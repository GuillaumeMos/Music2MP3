name: Build Spotify2MP3

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to create"
        default: "0.0.1"
        required: true
        type: string

env:
  LEVEL: ${{ inputs.version }}

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            runner: windows-latest
            py: "3.13"
            spec: Spotify2MP3-Windows.spec
            artifact: Spotify2MP3_Windows.exe
          # - os: macos
          #   runner: macos-latest
          #   py: "3.13"
          #   spec: Spotify2MP3-macOS.spec
          #   artifact: Spotify2MP3_macOS.zip
          # - os: linux
          #   runner: ubuntu-22.04
          #   py: "3.13"
          #   spec: Spotify2MP3-Linux.spec
          #   artifact: Spotify2MP3_Linux_x86-64.AppImage

    steps:
      - uses: actions/checkout@v4

      # Python
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: "pip"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      # ---- Platform-specific: ffmpeg + yt-dlp into ./ffmpeg and ./yt-dlp ----
      - name: Setup ffmpeg & yt-dlp (Windows)
        if: matrix.os == 'windows'
        shell: pwsh
        run: |
          mkdir ffmpeg
          cd ffmpeg
          Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip" -OutFile "ffmpeg.zip"
          Expand-Archive -Path "ffmpeg.zip" -DestinationPath "."
          Move-Item -Path "ffmpeg-master-latest-win64-gpl\bin\ffmpeg.exe" -Destination ".\ffmpeg.exe"
          Remove-Item -Recurse -Force "ffmpeg-master-latest-win64-gpl","ffmpeg.zip"
          cd ..
          mkdir yt-dlp
          cd yt-dlp
          Invoke-WebRequest -Uri "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe" -OutFile "yt-dlp.exe"

      - name: Setup ffmpeg & yt-dlp (macOS)
        if: matrix.os == 'macos'
        run: |
          # ffmpeg depuis Homebrew puis copie locale pour coller à resource_path("ffmpeg")
          brew update
          brew install ffmpeg
          mkdir -p ffmpeg
          cp "$(brew --prefix)/bin/ffmpeg" ffmpeg/ffmpeg
          chmod +x ffmpeg/ffmpeg

          # yt-dlp binaire macOS
          mkdir -p yt-dlp
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos -o yt-dlp/yt-dlp
          chmod +x yt-dlp/yt-dlp

      - name: Setup ffmpeg & yt-dlp (Linux x64)
        if: matrix.os == 'linux'
        run: |
          set -e
          mkdir -p ffmpeg
          cd ffmpeg
          wget -O ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          tar -xf ffmpeg.tar.xz
          mv ffmpeg-*-amd64-static/ffmpeg ./ffmpeg
          chmod +x ffmpeg
          rm -rf ffmpeg.tar.xz ffmpeg-*-amd64-static
          cd ..
          mkdir -p yt-dlp
          cd yt-dlp
          wget -O yt-dlp https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux
          chmod +x yt-dlp

      # ---- Build (les .spec peuvent viser app.py comme entry) ----
      - name: Build with PyInstaller
        run: |
          pyinstaller ${{ matrix.spec }}

      # ---- Post-process artifacts by platform ----
      - name: Rename Windows exe
        if: matrix.os == 'windows'
        shell: pwsh
        run: |
          Rename-Item -Path "dist/Spotify2MP3.exe" -NewName "Spotify2MP3_Windows.exe"

      - name: Zip macOS .app
        if: matrix.os == 'macos'
        run: |
          cd dist
          ditto -c -k --keepParent Spotify2MP3.app Spotify2MP3_macOS.zip

      - name: Build Linux AppImage
        if: matrix.os == 'linux'
        run: |
          set -e
          chmod +x dist/Spotify2MP3/Spotify2MP3

          # Préparer AppDir
          mkdir -p AppDir/usr/bin
          cp -r dist/Spotify2MP3 AppDir/Spotify2MP3
          cp ffmpeg/ffmpeg AppDir/usr/bin/ffmpeg
          cp yt-dlp/yt-dlp AppDir/usr/bin/yt-dlp
          # assets optionnels si présents
          if [ -f config.json ]; then cp config.json AppDir/config.json; fi
          if [ -f icon.png ]; then cp icon.png AppDir/icon.png; fi

          # Desktop file
          cat > AppDir/Spotify2MP3.desktop <<'EOF'
          [Desktop Entry]
          Type=Application
          Name=Spotify2MP3
          Exec=Spotify2MP3/Spotify2MP3
          Icon=icon
          Categories=AudioVideo;Audio;Music;
          EOF

          # AppRun
          cat > AppDir/AppRun <<'EOF'
          #!/bin/sh
          APPDIR="$(dirname "$(readlink -f "$0")")"
          exec "$APPDIR/Spotify2MP3/Spotify2MP3" "$@"
          EOF
          chmod +x AppDir/AppRun

          # appimagetool
          wget -c "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage" -O appimagetool.AppImage
          chmod +x appimagetool.AppImage
          ./appimagetool.AppImage AppDir Spotify2MP3_Linux_x86-64.AppImage
          chmod +x Spotify2MP3_Linux_x86-64.AppImage

      # ---- Upload as build artifacts (useful for debugging) ----
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: |
            dist/Spotify2MP3_Windows.exe
            dist/Spotify2MP3_macOS.zip
            Spotify2MP3_Linux_x86-64.AppImage
          if-no-files-found: ignore

      # ---- Create/Update GitHub Draft Release (one per matrix run) ----
      - name: Create GitHub Draft
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.LEVEL }}
          name: Spotify2MP3 v${{ env.LEVEL }}
          draft: true
          prerelease: false
          files: |
            dist/Spotify2MP3_Windows.exe
            dist/Spotify2MP3_macOS.zip
            Spotify2MP3_Linux_x86-64.AppImage
